plugins {
    id 'java'
    id 'maven'
    id 'signing'
    id 'jacoco'
    id 'com.github.hierynomus.license' version '0.14.0'
    id 'org.unbroken-dome.test-sets' version '2.1.1'
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'nl.junglecomputing.ipl:ipl:2.3.3'
    compile 'nl.junglecomputing.ipl:ibis-util:2.3.3'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'com.google.guava:guava:17.0'

    implementation 'nl.junglecomputing.ipl:ipl-impl-smartsockets:2.3.3'
    implementation 'nl.junglecomputing.ipl:ipl-impl-tcp:2.3.3'

    testCompile 'nl.junglecomputing.ipl:ipl-support:2.3.3'
    testCompile 'junit:junit:4.11'
    testCompile 'org.slf4j:slf4j-log4j12:1.7.2'
}

version = '2.0.1'

license {
    ext.copyright_year = 2019
    ext.copyright_owner1 = 'Vrije Universiteit Amsterdam'
	ext.copyright_owner2 = 'Netherlands eScience Center'
    header rootProject.file('gradle/HEADER')
    strictCheck true
    excludes(["**/log4j.properties"])
    mapping {
        // IntelliJ IDEA gives "Dangling Javadoc comment." warning when default JAVADOC_STYLE is used,
        // so switch to comment style
        java = 'SLASHSTAR_STYLE'
    }
}

licenseFormat.description = "Applies the license found in the header file in files missing the header"

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    include 'ibis/constellation/*', 'ibis/constellation/util/*'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

tasks.withType(Jar) {
    destinationDir = file("$rootDir/lib")
}

task copyRuntimeLibs(type: Copy) {
    into "lib"
    from configurations.runtime
}

testSets {
    integrationTest
}

jacocoTestReport {
    description 'Generate coverage report of unit tests'
    group 'Code coverage reporting'
    executionData test
    sourceSets sourceSets.main
    reports {
        xml.enabled = true // codecov depends on xml format report
    }
}

integrationTest.description = 'Run the integration tests'

check.dependsOn integrationTest

integrationTest.mustRunAfter test

task jacocoIntegrationTestReport(type: JacocoReport) {
    description 'Generate coverage report of integration tests'
    group 'Code coverage reporting'
    executionData integrationTest
    sourceSets sourceSets.main
    reports {
        xml.enabled = true // codecov depends on xml format report
    }
}

signing {
    sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      // repository(url: "file://${System.properties['user.home']}/.m2/repository") {
      // }

      snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'Constellation'
        groupId 'nl.junglecomputing'
        packaging 'jar'
        description 'Constellation is a software platform/library specifically aimed at distributed, heterogeneous and hierarchical computing environments.'

        url "https://JungleComputing.github.io/Constellation"

        scm {
          connection 'scm:git:git://github.com/nlesc/constellation.git'
          developerConnection 'scm:git:ssh://github.com:nlesc/constellation.git'
          url 'https://github.com/nlesc/constellation/tree/master'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            name 'Jason Maassen'
            organization 'Netherlands escience Center'
            url 'https://www.esciencecenter.nl/team/dr-jason-maassen/'
          }
          developer {
            name 'Ceriel Jacobs'
            organization 'Vrije Universiteit Amsterdam'
            url 'https://github.com/CerielJacobs'
          }
        }
      }
    }
  }
}
